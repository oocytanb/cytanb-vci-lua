-- cytanb | Copyright (c) 2019 oO (https://github.com/oocytanb) | MIT Licensed
---@type cytanb @See `cytanb_annotations.lua`
local cytanb=(function()math.randomseed(os.time()-os.clock()*10000)local b='__CYTANB_INSTANCE_ID'local c=400;local d;local a;local e=function(f,g)for h=1,4 do local i=f[h]-g[h]if i~=0 then return i end end;return 0 end;local j;j={__eq=function(f,g)return f[1]==g[1]and f[2]==g[2]and f[3]==g[3]and f[4]==g[4]end,__lt=function(f,g)return e(f,g)<0 end,__le=function(f,g)return e(f,g)<=0 end,__tostring=function(k)local l=k[2]or 0;local m=k[3]or 0;return string.format('%08x-%04x-%04x-%04x-%04x%08x',bit32.band(k[1]or 0,0xFFFFFFFF),bit32.band(bit32.rshift(l,16),0xFFFF),bit32.band(l,0xFFFF),bit32.band(bit32.rshift(m,16),0xFFFF),bit32.band(m,0xFFFF),bit32.band(k[4]or 0,0xFFFFFFFF))end,__concat=function(f,g)local n=getmetatable(f)==j;local o=getmetatable(g)==j;if not n and not o then error('attempt to concatenate illegal values')end;return(n and tostring(f)or f)..(o and tostring(g)or g)end}a={InstanceID=function()if d==''then d=vci.state.Get(b)or''end;return d end,SetConst=function(p,q,k)if type(p)~='table'then error('Cannot set const to non-table target')end;local r=getmetatable(p)local s=r or{}local t=type(s.__index)=='table'if p[q]~=nil and(not t or s.__index[q]==nil)then error('Non-const field "'..q..'" already exists')end;if not t then s.__index={}end;local u=s.__index;u[q]=k;if not t or type(s.__newindex)~='function'then s.__newindex=function(table,v,w)if table==p and u[v]~=nil then error('Cannot assign to read only field "'..v..'"')end;rawset(table,v,w)end end;if not r then setmetatable(p,s)end;return p end,SetConstEach=function(p,x)for y,w in pairs(x)do a.SetConst(p,y,w)end;return p end,Extend=function(p,z,A,B,C)if p==z or type(p)~='table'or type(z)~='table'then return p end;if A then if not C then C={}end;if C[z]then error('circular reference')end;C[z]=true end;for y,w in pairs(z)do if A and type(w)=='table'then local D=p[y]p[y]=a.Extend(type(D)=='table'and D or{},w,A,B,C)else p[y]=w end end;if not B then local E=getmetatable(z)if type(E)=='table'then if A then local F=getmetatable(p)setmetatable(p,a.Extend(type(F)=='table'and F or{},E,true))else setmetatable(p,E)end end end;if A then C[z]=nil end;return p end,Vars=function(w,G,H,C)local I;if G then I=G~='__NOLF'else G='  'I=true end;if not H then H=''end;if not C then C={}end;local J=type(w)if J=='table'then C[w]=C[w]and C[w]+1 or 1;local K=I and H..G or''local L='('..tostring(w)..') {'local M=true;for v,N in pairs(w)do if M then M=false else L=L..(I and','or', ')end;if I then L=L..'\n'..K end;if type(N)=='table'and C[N]and C[N]>0 then L=L..v..' = ('..tostring(N)..')'else L=L..v..' = '..a.Vars(N,G,K,C)end end;if not M and I then L=L..'\n'..H end;L=L..'}'C[w]=C[w]-1;if C[w]<=0 then C[w]=nil end;return L elseif J=='function'or J=='thread'or J=='userdata'then return'('..J..')'elseif J=='string'then return'('..J..') '..string.format('%q',w)else return'('..J..') '..tostring(w)end end,GetLogLevel=function()return c end,SetLogLevel=function(O)c=O end,Log=function(O,...)if O<=c then local P=table.pack(...)if P.n==1 then local w=P[1]if w~=nil then print(type(w)=='table'and a.Vars(w)or tostring(w))else print('')end else local L=''for h=1,P.n do local w=P[h]if w~=nil then L=L..(type(w)=='table'and a.Vars(w)or tostring(w))end end;print(L)end end end,LogFatal=function(...)a.Log(a.LogLevelFatal,...)end,LogError=function(...)a.Log(a.LogLevelError,...)end,LogWarn=function(...)a.Log(a.LogLevelWarn,...)end,LogInfo=function(...)a.Log(a.LogLevelInfo,...)end,LogDebug=function(...)a.Log(a.LogLevelDebug,...)end,LogTrace=function(...)a.Log(a.LogLevelTrace,...)end,FatalLog=function(...)a.LogFatal(...)end,ErrorLog=function(...)a.LogError(...)end,WarnLog=function(...)a.LogWarn(...)end,InfoLog=function(...)a.LogInfo(...)end,DebugLog=function(...)a.LogDebug(...)end,TraceLog=function(...)a.LogTrace(...)end,ListToMap=function(Q,R)local table={}local S=R==nil;for y,w in pairs(Q)do table[w]=S and w or R end;return table end,Round=function(T,U)if U then local V=math.pow(10,U)return math.floor(T*V+0.5)/V else return math.floor(T+0.5)end end,Lerp=function(W,X,J)if J<=0.0 then return W elseif J>=1.0 then return X else return W+(X-W)*J end end,LerpUnclamped=function(W,X,J)return W+(X-W)*J end,Random32=function()return bit32.band(math.random(-2147483648,2147483646),0xFFFFFFFF)end,RandomUUID=function()return a.UUIDFromNumbers(a.Random32(),bit32.bor(0x4000,bit32.band(a.Random32(),0xFFFF0FFF)),bit32.bor(0x80000000,bit32.band(a.Random32(),0x3FFFFFFF)),a.Random32())end,UUIDString=function(Y)return j.__tostring(Y)end,UUIDFromNumbers=function(Z,_,a0,a1)local Y={Z or 0,_ or 0,a0 or 0,a1 or 0}setmetatable(Y,j)return Y end,UUIDFromString=function(L)local a2=string.len(L)if a2~=32 and a2~=36 then return nil end;local a3='[0-9a-f-A-F]+'local a4='^('..a3 ..')$'local a5='^-('..a3 ..')$'local a6,a7,a8,a9;if a2==32 then local Y=a.UUIDFromNumbers(0,0,0,0)local aa=1;for h,ab in ipairs({8,16,24,32})do a6,a7,a8=string.find(string.sub(L,aa,ab),a4)if not a6 then return nil end;Y[h]=tonumber(a8,16)aa=ab+1 end;return Y else a6,a7,a8=string.find(string.sub(L,1,8),a4)if not a6 then return nil end;local Z=tonumber(a8,16)a6,a7,a8=string.find(string.sub(L,9,13),a5)if not a6 then return nil end;a6,a7,a9=string.find(string.sub(L,14,18),a5)if not a6 then return nil end;local _=tonumber(a8 ..a9,16)a6,a7,a8=string.find(string.sub(L,19,23),a5)if not a6 then return nil end;a6,a7,a9=string.find(string.sub(L,24,28),a5)if not a6 then return nil end;local a0=tonumber(a8 ..a9,16)a6,a7,a8=string.find(string.sub(L,29,36),a4)if not a6 then return nil end;local a1=tonumber(a8,16)return a.UUIDFromNumbers(Z,_,a0,a1)end end,ParseUUID=function(L)return a.UUIDFromString(L)end,ColorFromARGB32=function(ac)local ad=type(ac)=='number'and ac or 0xFF000000;return Color.__new(bit32.band(bit32.rshift(ad,16),0xFF)/0xFF,bit32.band(bit32.rshift(ad,8),0xFF)/0xFF,bit32.band(ad,0xFF)/0xFF,bit32.band(bit32.rshift(ad,24),0xFF)/0xFF)end,ColorToARGB32=function(ae)return bit32.bor(bit32.lshift(bit32.band(a.Round(0xFF*ae.a),0xFF),24),bit32.lshift(bit32.band(a.Round(0xFF*ae.r),0xFF),16),bit32.lshift(bit32.band(a.Round(0xFF*ae.g),0xFF),8),bit32.band(a.Round(0xFF*ae.b),0xFF))end,ColorFromIndex=function(af,ag,ah,ai,aj)local ak=math.max(math.floor(ag or a.ColorHueSamples),1)local al=aj and ak or ak-1;local am=math.max(math.floor(ah or a.ColorSaturationSamples),1)local an=math.max(math.floor(ai or a.ColorBrightnessSamples),1)local ao=math.max(math.min(math.floor(af or 0),ak*am*an-1),0)local ap=ao%ak;local aq=math.floor(ao/ak)local ar=aq%am;local as=math.floor(aq/am)if aj or ap~=al then local at=ap/al;local au=(am-ar)/am;local w=(an-as)/an;return Color.HSVToRGB(at,au,w)else local w=(an-as)/an*ar/(am-1)return Color.HSVToRGB(0.0,0.0,w)end end,GetSubItemTransform=function(av)local aw=av.GetPosition()local ax=av.GetRotation()local ay=av.GetLocalScale()return{positionX=aw.x,positionY=aw.y,positionZ=aw.z,rotationX=ax.x,rotationY=ax.y,rotationZ=ax.z,rotationW=ax.w,scaleX=ay.x,scaleY=ay.y,scaleZ=ay.z}end,TableToSerializable=function(az,C)if type(az)~='table'then return az end;if not C then C={}end;if C[az]then error('circular reference')end;C[az]=true;local aA={}for y,w in pairs(az)do local aB=type(y)=='number'and tostring(y)..a.ArrayNumberTag or y;if type(w)=='number'and w<0 then aA[tostring(aB)..a.NegativeNumberTag]=tostring(w)else aA[aB]=a.TableToSerializable(w,C)end end;C[az]=nil;return aA end,TableFromSerializable=function(aA)if type(aA)~='table'then return aA end;local az={}for y,w in pairs(aA)do local aB;local aC;if type(y)=='string'then if string.endsWith(y,a.NegativeNumberTag)then aB=string.sub(y,1,-1-#a.NegativeNumberTag)aC=true else aB=y;aC=false end;if string.endsWith(aB,a.ArrayNumberTag)then local aD=string.sub(aB,1,-1-#a.ArrayNumberTag)aB=tonumber(aD)or aD end else aB=y;aC=false end;az[aB]=aC and type(w)=='string'and tonumber(w)or a.TableFromSerializable(w)end;return az end,TableToSerialiable=function(az,C)return a.TableToSerializable(az,C)end,TableFromSerialiable=function(aA)return a.TableFromSerializable(aA)end,EmitMessage=function(q,aE)local table=aE and a.TableToSerializable(aE)or{}table[a.InstanceIDParameterName]=a.InstanceID()vci.message.Emit(q,json.serialize(table))end,OnMessage=function(q,aF)local aG=function(aH,aI,aJ)local aK=nil;if aH.type~='comment'and type(aJ)=='string'then local aL,aA=pcall(json.parse,aJ)if aL and type(aA)=='table'then aK=a.TableFromSerializable(aA)end end;local aE=aK and aK or{[a.MessageValueParameterName]=aJ}aF(aH,aI,aE)end;vci.message.On(q,aG)return{Off=function()if aG then aG=nil end end}end}a.SetConstEach(a,{LogLevelFatal=100,LogLevelError=200,LogLevelWarn=300,LogLevelInfo=400,LogLevelDebug=500,LogLevelTrace=600,ColorHueSamples=10,ColorSaturationSamples=4,ColorBrightnessSamples=5,NegativeNumberTag='#__CYTANB_NEGATIVE_NUMBER',ArrayNumberTag='#__CYTANB_ARRAY_NUMBER',InstanceIDParameterName='__CYTANB_INSTANCE_ID',MessageValueParameterName='__CYTANB_MESSAGE_VALUE'})a.SetConstEach(a,{ColorMapSize=a.ColorHueSamples*a.ColorSaturationSamples*a.ColorBrightnessSamples,FatalLogLevel=a.LogLevelFatal,ErrorLogLevel=a.LogLevelError,WarnLogLevel=a.LogLevelWarn,InfoLogLevel=a.LogLevelInfo,DebugLogLevel=a.LogLevelDebug,TraceLogLevel=a.LogLevelTrace})package.loaded['cytanb']=a;if vci.assets.IsMine then d=tostring(a.RandomUUID())vci.state.Set(b,d)else d=''end;return a end)()
