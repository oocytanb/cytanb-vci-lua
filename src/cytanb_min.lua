-- cytanb | Copyright (c) 2019 oO (https://github.com/oocytanb) | MIT Licensed
---@type cytanb @See `cytanb_annotations.lua`
local cytanb=(function()math.randomseed(os.time()-os.clock()*10000)local b='__CYTANB_INSTANCE_ID'local c=400;local d;local a;local e;e={__eq=function(f,g)return f[1]==g[1]and f[2]==g[2]and f[3]==g[3]and f[4]==g[4]end,Compare=function(f,g)for h=1,4 do local i=f[h]-g[h]if i~=0 then return i end end;return 0 end,__lt=function(f,g)return e.Compare(f,g)<0 end,__le=function(f,g)return e.Compare(f,g)<=0 end,__tostring=function(j)local k=j[2]or 0;local l=j[3]or 0;return string.format('%08x-%04x-%04x-%04x-%04x%08x',bit32.band(j[1]or 0,0xFFFFFFFF),bit32.band(bit32.rshift(k,16),0xFFFF),bit32.band(k,0xFFFF),bit32.band(bit32.rshift(l,16),0xFFFF),bit32.band(l,0xFFFF),bit32.band(j[4]or 0,0xFFFFFFFF))end,__concat=function(f,g)local m=getmetatable(f)local n=m==e or type(m)=='table'and m.__concat==e.__concat;local o=getmetatable(g)local p=o==e or type(o)=='table'and o.__concat==e.__concat;if not n and not p then error('attempt to concatenate illegal values')end;return(n and e.__tostring(f)or f)..(p and e.__tostring(g)or g)end}a={InstanceID=function()if d==''then d=vci.state.Get(b)or''end;return d end,SetConst=function(q,r,j)if type(q)~='table'then error('Cannot set const to non-table target')end;local s=getmetatable(q)local t=s or{}local u=type(t.__index)=='table'if q[r]~=nil and(not u or t.__index[r]==nil)then error('Non-const field "'..r..'" already exists')end;if not u then t.__index={}end;local v=t.__index;v[r]=j;if not u or type(t.__newindex)~='function'then t.__newindex=function(table,w,x)if table==q and v[w]~=nil then error('Cannot assign to read only field "'..w..'"')end;rawset(table,w,x)end end;if not s then setmetatable(q,t)end;return q end,SetConstEach=function(q,y)for z,x in pairs(y)do a.SetConst(q,z,x)end;return q end,Extend=function(q,A,B,C,D)if q==A or type(q)~='table'or type(A)~='table'then return q end;if B then if not D then D={}end;if D[A]then error('circular reference')end;D[A]=true end;for z,x in pairs(A)do if B and type(x)=='table'then local E=q[z]q[z]=a.Extend(type(E)=='table'and E or{},x,B,C,D)else q[z]=x end end;if not C then local F=getmetatable(A)if type(F)=='table'then if B then local G=getmetatable(q)setmetatable(q,a.Extend(type(G)=='table'and G or{},F,true))else setmetatable(q,F)end end end;if B then D[A]=nil end;return q end,Vars=function(x,H,I,D)local J;if H then J=H~='__NOLF'else H='  'J=true end;if not I then I=''end;if not D then D={}end;local K=type(x)if K=='table'then D[x]=D[x]and D[x]+1 or 1;local L=J and I..H or''local M='('..tostring(x)..') {'local N=true;for w,O in pairs(x)do if N then N=false else M=M..(J and','or', ')end;if J then M=M..'\n'..L end;if type(O)=='table'and D[O]and D[O]>0 then M=M..w..' = ('..tostring(O)..')'else M=M..w..' = '..a.Vars(O,H,L,D)end end;if not N and J then M=M..'\n'..I end;M=M..'}'D[x]=D[x]-1;if D[x]<=0 then D[x]=nil end;return M elseif K=='function'or K=='thread'or K=='userdata'then return'('..K..')'elseif K=='string'then return'('..K..') '..string.format('%q',x)else return'('..K..') '..tostring(x)end end,GetLogLevel=function()return c end,SetLogLevel=function(P)c=P end,Log=function(P,...)if P<=c then local Q=table.pack(...)if Q.n==1 then local x=Q[1]if x~=nil then print(type(x)=='table'and a.Vars(x)or tostring(x))else print('')end else local M=''for h=1,Q.n do local x=Q[h]if x~=nil then M=M..(type(x)=='table'and a.Vars(x)or tostring(x))end end;print(M)end end end,LogFatal=function(...)a.Log(a.LogLevelFatal,...)end,LogError=function(...)a.Log(a.LogLevelError,...)end,LogWarn=function(...)a.Log(a.LogLevelWarn,...)end,LogInfo=function(...)a.Log(a.LogLevelInfo,...)end,LogDebug=function(...)a.Log(a.LogLevelDebug,...)end,LogTrace=function(...)a.Log(a.LogLevelTrace,...)end,FatalLog=function(...)a.LogFatal(...)end,ErrorLog=function(...)a.LogError(...)end,WarnLog=function(...)a.LogWarn(...)end,InfoLog=function(...)a.LogInfo(...)end,DebugLog=function(...)a.LogDebug(...)end,TraceLog=function(...)a.LogTrace(...)end,ListToMap=function(R,S)local table={}local T=S==nil;for z,x in pairs(R)do table[x]=T and x or S end;return table end,Round=function(U,V)if V then local W=math.pow(10,V)return math.floor(U*W+0.5)/W else return math.floor(U+0.5)end end,Lerp=function(X,Y,K)if K<=0.0 then return X elseif K>=1.0 then return Y else return X+(Y-X)*K end end,LerpUnclamped=function(X,Y,K)return X+(Y-X)*K end,Random32=function()return bit32.band(math.random(-2147483648,2147483646),0xFFFFFFFF)end,RandomUUID=function()return a.UUIDFromNumbers(a.Random32(),bit32.bor(0x4000,bit32.band(a.Random32(),0xFFFF0FFF)),bit32.bor(0x80000000,bit32.band(a.Random32(),0x3FFFFFFF)),a.Random32())end,UUIDString=function(Z)return e.__tostring(Z)end,UUIDFromNumbers=function(...)local _=...local K=type(_)local a0,a1,a2,a3;if K=='table'then a0=_[1]a1=_[2]a2=_[3]a3=_[4]else a0,a1,a2,a3=...end;local Z={bit32.band(a0 or 0,0xFFFFFFFF),bit32.band(a1 or 0,0xFFFFFFFF),bit32.band(a2 or 0,0xFFFFFFFF),bit32.band(a3 or 0,0xFFFFFFFF)}setmetatable(Z,e)return Z end,UUIDFromString=function(M)local a4=string.len(M)if a4~=32 and a4~=36 then return nil end;local a5='[0-9a-f-A-F]+'local a6='^('..a5 ..')$'local a7='^-('..a5 ..')$'local a8,a9,aa,ab;if a4==32 then local Z=a.UUIDFromNumbers(0,0,0,0)local ac=1;for h,ad in ipairs({8,16,24,32})do a8,a9,aa=string.find(string.sub(M,ac,ad),a6)if not a8 then return nil end;Z[h]=tonumber(aa,16)ac=ad+1 end;return Z else a8,a9,aa=string.find(string.sub(M,1,8),a6)if not a8 then return nil end;local a0=tonumber(aa,16)a8,a9,aa=string.find(string.sub(M,9,13),a7)if not a8 then return nil end;a8,a9,ab=string.find(string.sub(M,14,18),a7)if not a8 then return nil end;local a1=tonumber(aa..ab,16)a8,a9,aa=string.find(string.sub(M,19,23),a7)if not a8 then return nil end;a8,a9,ab=string.find(string.sub(M,24,28),a7)if not a8 then return nil end;local a2=tonumber(aa..ab,16)a8,a9,aa=string.find(string.sub(M,29,36),a6)if not a8 then return nil end;local a3=tonumber(aa,16)return a.UUIDFromNumbers(a0,a1,a2,a3)end end,ParseUUID=function(M)return a.UUIDFromString(M)end,ColorFromARGB32=function(ae)local af=type(ae)=='number'and ae or 0xFF000000;return Color.__new(bit32.band(bit32.rshift(af,16),0xFF)/0xFF,bit32.band(bit32.rshift(af,8),0xFF)/0xFF,bit32.band(af,0xFF)/0xFF,bit32.band(bit32.rshift(af,24),0xFF)/0xFF)end,ColorToARGB32=function(ag)return bit32.bor(bit32.lshift(bit32.band(a.Round(0xFF*ag.a),0xFF),24),bit32.lshift(bit32.band(a.Round(0xFF*ag.r),0xFF),16),bit32.lshift(bit32.band(a.Round(0xFF*ag.g),0xFF),8),bit32.band(a.Round(0xFF*ag.b),0xFF))end,ColorFromIndex=function(ah,ai,aj,ak,al)local am=math.max(math.floor(ai or a.ColorHueSamples),1)local an=al and am or am-1;local ao=math.max(math.floor(aj or a.ColorSaturationSamples),1)local ap=math.max(math.floor(ak or a.ColorBrightnessSamples),1)local aq=math.max(math.min(math.floor(ah or 0),am*ao*ap-1),0)local ar=aq%am;local as=math.floor(aq/am)local at=as%ao;local au=math.floor(as/ao)if al or ar~=an then local av=ar/an;local aw=(ao-at)/ao;local x=(ap-au)/ap;return Color.HSVToRGB(av,aw,x)else local x=(ap-au)/ap*at/(ao-1)return Color.HSVToRGB(0.0,0.0,x)end end,GetSubItemTransform=function(ax)local ay=ax.GetPosition()local az=ax.GetRotation()local aA=ax.GetLocalScale()return{positionX=ay.x,positionY=ay.y,positionZ=ay.z,rotationX=az.x,rotationY=az.y,rotationZ=az.z,rotationW=az.w,scaleX=aA.x,scaleY=aA.y,scaleZ=aA.z}end,TableToSerializable=function(aB,D)if type(aB)~='table'then return aB end;if not D then D={}end;if D[aB]then error('circular reference')end;D[aB]=true;local aC={}for z,x in pairs(aB)do local aD=type(z)=='number'and tostring(z)..a.ArrayNumberTag or z;if type(x)=='number'and x<0 then aC[tostring(aD)..a.NegativeNumberTag]=tostring(x)else aC[aD]=a.TableToSerializable(x,D)end end;D[aB]=nil;return aC end,TableFromSerializable=function(aC)if type(aC)~='table'then return aC end;local aB={}for z,x in pairs(aC)do local aD;local aE;if type(z)=='string'then if string.endsWith(z,a.NegativeNumberTag)then aD=string.sub(z,1,-1-#a.NegativeNumberTag)aE=true else aD=z;aE=false end;if string.endsWith(aD,a.ArrayNumberTag)then local aF=string.sub(aD,1,-1-#a.ArrayNumberTag)aD=tonumber(aF)or aF end else aD=z;aE=false end;aB[aD]=aE and type(x)=='string'and tonumber(x)or a.TableFromSerializable(x)end;return aB end,TableToSerialiable=function(aB,D)return a.TableToSerializable(aB,D)end,TableFromSerialiable=function(aC)return a.TableFromSerializable(aC)end,EmitMessage=function(r,aG)local table=aG and a.TableToSerializable(aG)or{}table[a.InstanceIDParameterName]=a.InstanceID()vci.message.Emit(r,json.serialize(table))end,OnMessage=function(r,aH)local aI=function(aJ,aK,aL)local aM=nil;if aJ.type~='comment'and type(aL)=='string'then local aN,aC=pcall(json.parse,aL)if aN and type(aC)=='table'then aM=a.TableFromSerializable(aC)end end;local aG=aM and aM or{[a.MessageValueParameterName]=aL}aH(aJ,aK,aG)end;vci.message.On(r,aI)return{Off=function()if aI then aI=nil end end}end}a.SetConstEach(a,{LogLevelFatal=100,LogLevelError=200,LogLevelWarn=300,LogLevelInfo=400,LogLevelDebug=500,LogLevelTrace=600,ColorHueSamples=10,ColorSaturationSamples=4,ColorBrightnessSamples=5,NegativeNumberTag='#__CYTANB_NEGATIVE_NUMBER',ArrayNumberTag='#__CYTANB_ARRAY_NUMBER',InstanceIDParameterName='__CYTANB_INSTANCE_ID',MessageValueParameterName='__CYTANB_MESSAGE_VALUE'})a.SetConstEach(a,{ColorMapSize=a.ColorHueSamples*a.ColorSaturationSamples*a.ColorBrightnessSamples,FatalLogLevel=a.LogLevelFatal,ErrorLogLevel=a.LogLevelError,WarnLogLevel=a.LogLevelWarn,InfoLogLevel=a.LogLevelInfo,DebugLogLevel=a.LogLevelDebug,TraceLogLevel=a.LogLevelTrace})package.loaded['cytanb']=a;if vci.assets.IsMine then d=tostring(a.RandomUUID())vci.state.Set(b,d)else d=''end;return a end)()
