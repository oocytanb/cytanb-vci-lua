-- cytanb | Copyright (c) 2019 oO (https://github.com/oocytanb) | MIT Licensed
---@type cytanb @See `cytanb_annotations.lua`
local cytanb=(function()math.randomseed(os.time()-os.clock()*10000)local b='__CYTANB_INSTANCE_ID'local c;local d;local e;local f;local a;local g=function(h,i)for j=1,4 do local k=h[j]-i[j]if k~=0 then return k end end;return 0 end;local l;l={__eq=function(h,i)return h[1]==i[1]and h[2]==i[2]and h[3]==i[3]and h[4]==i[4]end,__lt=function(h,i)return g(h,i)<0 end,__le=function(h,i)return g(h,i)<=0 end,__tostring=function(m)local n=m[2]or 0;local o=m[3]or 0;return string.format('%08x-%04x-%04x-%04x-%04x%08x',bit32.band(m[1]or 0,0xFFFFFFFF),bit32.band(bit32.rshift(n,16),0xFFFF),bit32.band(n,0xFFFF),bit32.band(bit32.rshift(o,16),0xFFFF),bit32.band(o,0xFFFF),bit32.band(m[4]or 0,0xFFFFFFFF))end,__concat=function(h,i)local p=getmetatable(h)local q=p==l or type(p)=='table'and p.__concat==l.__concat;local r=getmetatable(i)local s=r==l or type(r)=='table'and r.__concat==l.__concat;if not q and not s then error('attempt to concatenate illegal values')end;return(q and l.__tostring(h)or h)..(s and l.__tostring(i)or i)end}local t='__CYTANB_CONST_VARIABLES'local u=function(table,v)local w=getmetatable(table)if w then local x=rawget(w,t)if x then local y=rawget(x,v)if type(y)=='function'then return y(table,v)else return y end end end;return nil end;local z=function(table,v,A)local w=getmetatable(table)if w then local x=rawget(w,t)if x then if rawget(x,v)~=nil then error('Cannot assign to read only field "'..v..'"')end end end;rawset(table,v,A)end;local B=function(C)return string.gsub(string.gsub(C,a.EscapeSequenceTag,a.EscapeSequenceTag..a.EscapeSequenceTag),'/',a.SolidusTag)end;local D=function(C,E)local F=string.len(C)local G=string.len(a.EscapeSequenceTag)if G>F then return C end;local H=''local j=1;while j<F do local I,J=string.find(C,a.EscapeSequenceTag,j,true)if not I then if j==1 then H=C else H=H..string.sub(C,j)end;break end;if I>j then H=H..string.sub(C,j,I-1)end;local K=false;for L,M in ipairs(c)do local N,O=string.find(C,M.pattern,I)if N then H=H..(E and E(M.tag)or M.replacement)j=O+1;K=true;break end end;if not K then H=H..a.EscapeSequenceTag;j=J+1 end end;return H end;a={InstanceID=function()if f==''then f=vci.state.Get(b)or''end;return f end,SetConst=function(P,Q,m)if type(P)~='table'then error('Cannot set const to non-table target')end;local R=getmetatable(P)local w=R or{}local S=rawget(w,t)if rawget(P,Q)~=nil then error('Non-const field "'..Q..'" already exists')end;if not S then S={}rawset(w,t,S)w.__index=u;w.__newindex=z end;rawset(S,Q,m)if not R then setmetatable(P,w)end;return P end,SetConstEach=function(P,T)for U,A in pairs(T)do a.SetConst(P,U,A)end;return P end,Extend=function(P,V,W,X,Y)if P==V or type(P)~='table'or type(V)~='table'then return P end;if W then if not Y then Y={}end;if Y[V]then error('circular reference')end;Y[V]=true end;for U,A in pairs(V)do if W and type(A)=='table'then local Z=P[U]P[U]=a.Extend(type(Z)=='table'and Z or{},A,W,X,Y)else P[U]=A end end;if not X then local _=getmetatable(V)if type(_)=='table'then if W then local a0=getmetatable(P)setmetatable(P,a.Extend(type(a0)=='table'and a0 or{},_,true))else setmetatable(P,_)end end end;if W then Y[V]=nil end;return P end,Vars=function(A,a1,a2,Y)local a3;if a1 then a3=a1~='__NOLF'else a1='  'a3=true end;if not a2 then a2=''end;if not Y then Y={}end;local a4=type(A)if a4=='table'then Y[A]=Y[A]and Y[A]+1 or 1;local a5=a3 and a2 ..a1 or''local C='('..tostring(A)..') {'local a6=true;for v,a7 in pairs(A)do if a6 then a6=false else C=C..(a3 and','or', ')end;if a3 then C=C..'\n'..a5 end;if type(a7)=='table'and Y[a7]and Y[a7]>0 then C=C..v..' = ('..tostring(a7)..')'else C=C..v..' = '..a.Vars(a7,a1,a5,Y)end end;if not a6 and a3 then C=C..'\n'..a2 end;C=C..'}'Y[A]=Y[A]-1;if Y[A]<=0 then Y[A]=nil end;return C elseif a4=='function'or a4=='thread'or a4=='userdata'then return'('..a4 ..')'elseif a4=='string'then return'('..a4 ..') '..string.format('%q',A)else return'('..a4 ..') '..tostring(A)end end,GetLogLevel=function()return e end,SetLogLevel=function(a8)e=a8 end,Log=function(a8,...)if a8<=e then local a9=table.pack(...)if a9.n==1 then local A=a9[1]if A~=nil then print(type(A)=='table'and a.Vars(A)or tostring(A))else print('')end else local C=''for j=1,a9.n do local A=a9[j]if A~=nil then C=C..(type(A)=='table'and a.Vars(A)or tostring(A))end end;print(C)end end end,LogFatal=function(...)a.Log(a.LogLevelFatal,...)end,LogError=function(...)a.Log(a.LogLevelError,...)end,LogWarn=function(...)a.Log(a.LogLevelWarn,...)end,LogInfo=function(...)a.Log(a.LogLevelInfo,...)end,LogDebug=function(...)a.Log(a.LogLevelDebug,...)end,LogTrace=function(...)a.Log(a.LogLevelTrace,...)end,FatalLog=function(...)a.LogFatal(...)end,ErrorLog=function(...)a.LogError(...)end,WarnLog=function(...)a.LogWarn(...)end,InfoLog=function(...)a.LogInfo(...)end,DebugLog=function(...)a.LogDebug(...)end,TraceLog=function(...)a.LogTrace(...)end,ListToMap=function(aa,ab)local table={}local ac=ab==nil;for U,A in pairs(aa)do table[A]=ac and A or ab end;return table end,Round=function(ad,ae)if ae then local af=10^ae;return math.floor(ad*af+0.5)/af else return math.floor(ad+0.5)end end,Clamp=function(m,ag,ah)return math.max(ag,math.min(m,ah))end,Lerp=function(ai,aj,a4)if a4<=0.0 then return ai elseif a4>=1.0 then return aj else return ai+(aj-ai)*a4 end end,LerpUnclamped=function(ai,aj,a4)if a4==0.0 then return ai elseif a4==1.0 then return aj else return ai+(aj-ai)*a4 end end,PingPong=function(a4,ak)if ak==0 then return 0 end;local al=math.floor(a4/ak)local am=a4-al*ak;if al<0 then if(al+1)%2==0 then return ak-am else return am end else if al%2==0 then return am else return ak-am end end end,QuaternionToAngleAxis=function(an)local al=an.normalized;local ao=math.acos(al.w)local ap=math.sin(ao)local aq=math.deg(ao*2.0)local ar;if math.abs(ap)<=Quaternion.kEpsilon then ar=Vector3.right else local as=1.0/ap;ar=Vector3.__new(al.x*as,al.y*as,al.z*as)end;return aq,ar end,ApplyQuaternionToVector3=function(an,at)local au=an.w*at.x+an.y*at.z-an.z*at.y;local av=an.w*at.y-an.x*at.z+an.z*at.x;local aw=an.w*at.z+an.x*at.y-an.y*at.x;local ax=-an.x*at.x-an.y*at.y-an.z*at.z;return Vector3.__new(ax*-an.x+au*an.w+av*-an.z-aw*-an.y,ax*-an.y-au*-an.z+av*an.w+aw*-an.x,ax*-an.z+au*-an.y-av*-an.x+aw*an.w)end,Random32=function()return bit32.band(math.random(-2147483648,2147483646),0xFFFFFFFF)end,RandomUUID=function()return a.UUIDFromNumbers(a.Random32(),bit32.bor(0x4000,bit32.band(a.Random32(),0xFFFF0FFF)),bit32.bor(0x80000000,bit32.band(a.Random32(),0x3FFFFFFF)),a.Random32())end,UUIDString=function(ay)return l.__tostring(ay)end,UUIDFromNumbers=function(...)local az=...local a4=type(az)local aA,aB,aC,aD;if a4=='table'then aA=az[1]aB=az[2]aC=az[3]aD=az[4]else aA,aB,aC,aD=...end;local ay={bit32.band(aA or 0,0xFFFFFFFF),bit32.band(aB or 0,0xFFFFFFFF),bit32.band(aC or 0,0xFFFFFFFF),bit32.band(aD or 0,0xFFFFFFFF)}setmetatable(ay,l)return ay end,UUIDFromString=function(C)local F=string.len(C)if F~=32 and F~=36 then return nil end;local aE='[0-9a-f-A-F]+'local aF='^('..aE..')$'local aG='^-('..aE..')$'local aH,aI,aJ,aK;if F==32 then local ay=a.UUIDFromNumbers(0,0,0,0)local aL=1;for j,aM in ipairs({8,16,24,32})do aH,aI,aJ=string.find(string.sub(C,aL,aM),aF)if not aH then return nil end;ay[j]=tonumber(aJ,16)aL=aM+1 end;return ay else aH,aI,aJ=string.find(string.sub(C,1,8),aF)if not aH then return nil end;local aA=tonumber(aJ,16)aH,aI,aJ=string.find(string.sub(C,9,13),aG)if not aH then return nil end;aH,aI,aK=string.find(string.sub(C,14,18),aG)if not aH then return nil end;local aB=tonumber(aJ..aK,16)aH,aI,aJ=string.find(string.sub(C,19,23),aG)if not aH then return nil end;aH,aI,aK=string.find(string.sub(C,24,28),aG)if not aH then return nil end;local aC=tonumber(aJ..aK,16)aH,aI,aJ=string.find(string.sub(C,29,36),aF)if not aH then return nil end;local aD=tonumber(aJ,16)return a.UUIDFromNumbers(aA,aB,aC,aD)end end,ParseUUID=function(C)return a.UUIDFromString(C)end,CreateCircularQueue=function(aN)if type(aN)~='number'or aN<1 then error('Invalid argument: capacity = '..tostring(aN))end;local self;local aO=math.floor(aN)local H={}local aP=0;local aQ=0;local aR=0;self={Size=function()return aR end,Clear=function()aP=0;aQ=0;aR=0 end,IsEmpty=function()return aR==0 end,Offer=function(aS)H[aP+1]=aS;aP=(aP+1)%aO;if aR<aO then aR=aR+1 else aQ=(aQ+1)%aO end;return true end,OfferFirst=function(aS)aQ=(aO+aQ-1)%aO;H[aQ+1]=aS;if aR<aO then aR=aR+1 else aP=(aO+aP-1)%aO end;return true end,Poll=function()if aR==0 then return nil else local aS=H[aQ+1]aQ=(aQ+1)%aO;aR=aR-1;return aS end end,PollLast=function()if aR==0 then return nil else aP=(aO+aP-1)%aO;local aS=H[aP+1]aR=aR-1;return aS end end,Peek=function()if aR==0 then return nil else return H[aQ+1]end end,PeekLast=function()if aR==0 then return nil else return H[(aO+aP-1)%aO+1]end end,Get=function(aT)if aT<1 or aT>aR then a.LogError('CreateCircularQueue.Get: index is outside the range: '..aT)return nil end;return H[(aQ+aT-1)%aO+1]end,IsFull=function()return aR>=aO end,MaxSize=function()return aO end}return self end,
ColorFromARGB32=function(aU)local aV=type(aU)=='number'and aU or 0xFF000000;return Color.__new(bit32.band(bit32.rshift(aV,16),0xFF)/0xFF,bit32.band(bit32.rshift(aV,8),0xFF)/0xFF,bit32.band(aV,0xFF)/0xFF,bit32.band(bit32.rshift(aV,24),0xFF)/0xFF)end,ColorToARGB32=function(aW)return bit32.bor(bit32.lshift(bit32.band(a.Round(0xFF*aW.a),0xFF),24),bit32.lshift(bit32.band(a.Round(0xFF*aW.r),0xFF),16),bit32.lshift(bit32.band(a.Round(0xFF*aW.g),0xFF),8),bit32.band(a.Round(0xFF*aW.b),0xFF))end,ColorFromIndex=function(aX,aY,aZ,a_,b0)local b1=math.max(math.floor(aY or a.ColorHueSamples),1)local b2=b0 and b1 or b1-1;local b3=math.max(math.floor(aZ or a.ColorSaturationSamples),1)local b4=math.max(math.floor(a_ or a.ColorBrightnessSamples),1)local aT=a.Clamp(math.floor(aX or 0),0,b1*b3*b4-1)local b5=aT%b1;local b6=math.floor(aT/b1)local as=b6%b3;local b7=math.floor(b6/b3)if b0 or b5~=b2 then local y=b5/b2;local b8=(b3-as)/b3;local A=(b4-b7)/b4;return Color.HSVToRGB(y,b8,A)else local A=(b4-b7)/b4*as/(b3-1)return Color.HSVToRGB(0.0,0.0,A)end end,GetSubItemTransform=function(b9)local ba=b9.GetPosition()local bb=b9.GetRotation()local bc=b9.GetLocalScale()return{positionX=ba.x,positionY=ba.y,positionZ=ba.z,rotationX=bb.x,rotationY=bb.y,rotationZ=bb.z,rotationW=bb.w,scaleX=bc.x,scaleY=bc.y,scaleZ=bc.z}end,TableToSerializable=function(bd,Y)if type(bd)~='table'then return bd end;if not Y then Y={}end;if Y[bd]then error('circular reference')end;Y[bd]=true;local be={}for U,A in pairs(bd)do local bf=type(U)local bg;if bf=='string'then bg=B(U)elseif bf=='number'then bg=tostring(U)..a.ArrayNumberTag else bg=U end;local bh=type(A)if bh=='string'then be[bg]=B(A)elseif bh=='number'and A<0 then be[tostring(bg)..a.NegativeNumberTag]=tostring(A)else be[bg]=a.TableToSerializable(A,Y)end end;Y[bd]=nil;return be end,TableFromSerializable=function(be)if type(be)~='table'then return be end;local bd={}for U,A in pairs(be)do local bg;local bi=false;if type(U)=='string'then local bj=false;bg=D(U,function(bk)if bk==a.NegativeNumberTag then bi=true elseif bk==a.ArrayNumberTag then bj=true end;return nil end)if bj then bg=tonumber(bg)or bg end else bg=U;bi=false end;if bi and type(A)=='string'then bd[bg]=tonumber(A)elseif type(A)=='string'then bd[bg]=D(A,function(bk)return d[bk]end)else bd[bg]=a.TableFromSerializable(A)end end;return bd end,TableToSerialiable=function(bd,Y)return a.TableToSerializable(bd,Y)end,TableFromSerialiable=function(be)return a.TableFromSerializable(be)end,EmitMessage=function(Q,bl)local table=bl and a.TableToSerializable(bl)or{}table[a.InstanceIDParameterName]=a.InstanceID()vci.message.Emit(Q,json.serialize(table))end,OnMessage=function(Q,bm)local bn=function(bo,bp,bq)local br=nil;if bo.type~='comment'and type(bq)=='string'then local bs,be=pcall(json.parse,bq)if bs and type(be)=='table'then br=a.TableFromSerializable(be)end end;local bl=br and br or{[a.MessageValueParameterName]=bq}bm(bo,bp,bl)end;vci.message.On(Q,bn)return{Off=function()if bn then bn=nil end end}end,OnInstanceMessage=function(Q,bm)local bn=function(bo,bp,bl)local bt=a.InstanceID()if bt~=''and bt==bl[a.InstanceIDParameterName]then bm(bo,bp,bl)end end;return a.OnMessage(Q,bn)end}a.SetConstEach(a,{LogLevelFatal=100,LogLevelError=200,LogLevelWarn=300,LogLevelInfo=400,LogLevelDebug=500,LogLevelTrace=600,ColorHueSamples=10,ColorSaturationSamples=4,ColorBrightnessSamples=5,EscapeSequenceTag='#__CYTANB',SolidusTag='#__CYTANB_SOLIDUS',NegativeNumberTag='#__CYTANB_NEGATIVE_NUMBER',ArrayNumberTag='#__CYTANB_ARRAY_NUMBER',InstanceIDParameterName='__CYTANB_INSTANCE_ID',MessageValueParameterName='__CYTANB_MESSAGE_VALUE'})a.SetConstEach(a,{ColorMapSize=a.ColorHueSamples*a.ColorSaturationSamples*a.ColorBrightnessSamples,FatalLogLevel=a.LogLevelFatal,ErrorLogLevel=a.LogLevelError,WarnLogLevel=a.LogLevelWarn,InfoLogLevel=a.LogLevelInfo,DebugLogLevel=a.LogLevelDebug,TraceLogLevel=a.LogLevelTrace})c={{tag=a.NegativeNumberTag,pattern='^'..a.NegativeNumberTag,replacement=''},{tag=a.ArrayNumberTag,pattern='^'..a.ArrayNumberTag,replacement=''},{tag=a.SolidusTag,pattern='^'..a.SolidusTag,replacement='/'},{tag=a.EscapeSequenceTag,pattern='^'..a.EscapeSequenceTag..a.EscapeSequenceTag,replacement=a.EscapeSequenceTag}}d=a.ListToMap({a.NegativeNumberTag,a.ArrayNumberTag})e=a.LogLevelInfo;package.loaded['cytanb']=a;f=vci.state.Get(b)or''if f==''and vci.assets.IsMine then f=tostring(a.RandomUUID())vci.state.Set(b,f)end;return a end)()
