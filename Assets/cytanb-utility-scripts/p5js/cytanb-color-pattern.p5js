/*
 * Copyright (c) 2019 oO (https://github.com/oocytanb)
 * MIT Licensed
 *
 * カラーパーターンを生成するためのスクリプトです。
 * [p5.js](https://p5js.org/) の環境で動作します。
 */

function setup () {
  const WIDTH = 1024
  const HEIGHT = 1024

  const HUE_SAMPLES = 16
  const SATURATION_SAMPLES = 16
  const BASE_VALUE = 100.0

  const OMIT_GRAYSCALE = false

  const canvasWidth = WIDTH | 0
  const canvasHeight = HEIGHT | 0

  if (canvasWidth < 1 || canvasHeight < 1) {
    throw new RangeError('Invalid canvas size.')
  }

  const hueN = Math.max(Math.min(HUE_SAMPLES | 0, canvasWidth), 1)
  const toneN = OMIT_GRAYSCALE ? hueN : hueN - 1
  const saturationN = Math.max(Math.min(SATURATION_SAMPLES | 0, canvasHeight), 1)
  const baseValue = Math.max(Math.min(BASE_VALUE, 100.0), 0)

  createCanvas(canvasWidth, canvasHeight)
  background(255)
  colorMode(HSB)
  noStroke()

  //
  let x = 0
  let y = 0
  let nextX = 0
  let nextY = 0

  for (let hi = 0; hi < toneN; ++hi) {
    nextX = Math.round(canvasWidth * (hi + 1) / hueN)
    const h = 360.0 * hi / toneN

    y = 0
    for (let si = 0; si < saturationN; ++si) {
      nextY = Math.round(canvasHeight * (si + 1) / saturationN)
      const s = 100.0 * (1.0 - si / saturationN)

      fill(h, s, baseValue)
      rect(x, y, nextX - x, nextY - y)

      y = nextY
    }
    x = nextX
  }

  //
  if (!OMIT_GRAYSCALE) {
    nextX = canvasWidth
    y = 0
    for (let vi = 0; vi < saturationN; ++vi) {
      nextY = Math.round(canvasHeight * (vi + 1) / saturationN)
      const v = baseValue * vi / (saturationN - 1)

      fill(0.0, 0.0, v)
      rect(x, y, nextX - x, nextY - y)

      y = nextY
    }
  }
}

function draw () {
}
